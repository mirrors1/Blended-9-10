{"version":3,"file":"index.js","sources":["../src/js/localStorageAPI.js","../src/js/refs.js","../src/js/renderTask.js","../src/js/handle.js","../src/main.js"],"sourcesContent":["const sampleTasks = [\n  {\n    id: '1',\n    taskName: 'Маші',\n    taskText: 'Витерти пил',\n  },\n  {\n    id: '2',\n    taskName: 'Роману',\n    taskText: 'Помити посуд',\n  },\n  {\n    id: '3',\n    taskName: 'Артему',\n    taskText: 'Винести сміття',\n  },\n  {\n    id: '4',\n    taskName: 'Наташі',\n    taskText: 'Купити хліб',\n  },\n];\nconst TASK_KEY = 'tasks';\n\nexport function initStorage() {\n  const value = getTaskFromLocalStorage();\n\n  if (!value.length) {\n    localStorage.setItem(TASK_KEY, JSON.stringify(sampleTasks)); //sample tasks\n    // localStorage.setItem(TASK_KEY, JSON.stringify([]));//default\n  }\n}\n\nexport function addTaskToLocalStorage(obj) {\n  const tasks = getTaskFromLocalStorage();\n\n  tasks.push(obj);\n\n  localStorage.setItem(TASK_KEY, JSON.stringify(tasks));\n}\n\nexport function getTaskFromLocalStorage() {\n  return JSON.parse(localStorage.getItem(TASK_KEY));\n}\n\nexport function removeTaskToLocalStorage(id) {\n  const tasks = getTaskFromLocalStorage();\n\n  const newTasks = tasks.filter(value => value.id !== id);\n\n  localStorage.setItem(TASK_KEY, JSON.stringify(newTasks));\n}\n","export default {\n  form: document.querySelector('#task-form'),\n  tasksList: document.querySelector('#task-list'),\n};\n","import { getTaskFromLocalStorage } from './localStorageAPI';\nimport refs from './refs';\n\nexport function renderTask() {\n  const tasks = getTaskFromLocalStorage();\n  const item = tasks\n    .map(\n      ({ id, taskName, taskText }) =>\n        `<li class=\"task-list-item\">\n      <button class=\"task-list-item-btn\" data-id=\"${id}\">Видалити</button>\n      <h3>${taskName}</h3>\n      <p>${taskText}</p>\n    </li>`\n    )\n    .join('');\n\n  refs.tasksList.innerHTML = item;\n}\n","import { nanoid } from 'nanoid';\r\nimport {\r\n  addTaskToLocalStorage,\r\n  removeTaskToLocalStorage,\r\n} from './localStorageAPI';\r\nimport { renderTask } from './renderTask';\r\n\r\nexport function handleFormSubmit(evt) {\r\n  evt.preventDefault();\r\n  const taskName = evt.currentTarget.elements.taskName.value.trim();\r\n  const taskText = evt.currentTarget.elements.taskText.value.trim();\r\n  if (!taskName || !taskText) {\r\n    alert('Введіть данні у всі поля');\r\n    return;\r\n  }\r\n  const newTask = { id: nanoid(), taskName, taskText };\r\n  addTaskToLocalStorage(newTask);\r\n  evt.currentTarget.reset();\r\n  renderTask();\r\n}\r\n\r\nexport function handleTaskList(evt) {\r\n  evt.preventDefault();\r\n  if (!evt.target.classList.contains('task-list-item-btn')) {\r\n    return;\r\n  }\r\n  const id = evt.target.dataset.id;\r\n  removeTaskToLocalStorage(id);\r\n  renderTask();\r\n}\r\n","// **\n//  * Створи список справ.\n//  * На сторінці є два інпути які має вводиться назва і текст задачі.\n//  * Після натискання на кнопку \"Додати\" завдання додається до списку #task-list.\n//  *\n//  * Розмітка картки задачі\n//  * <li class=\"task-list-item\">\n//  *     <button class=\"task-list-item-btn\">Удалить</button>\n//  *     <h3>Заголовок</h3>\n//  *     <p>Текст</p>\n//  * </li>\n//  *\n//  * У кожної картки має бути кнопка \"Видалити\", щоб можна було\n//  * прибрати завдання зі списку.\n//  * Список із завданнями має бути доступним після пере\n\n// const newTask = {\n//   taskName,\n//   taskText,\n// };\n\nimport { renderTask } from './js/renderTask';\nimport { handleFormSubmit, handleTaskList } from './js/handle';\n\nimport { initStorage } from './js/localStorageAPI';\ninitStorage();\nrenderTask();\n\nimport refs from './js/refs';\nrefs.form.addEventListener('submit', handleFormSubmit);\nrefs.tasksList.addEventListener('click', handleTaskList);\n"],"names":["sampleTasks","TASK_KEY","initStorage","getTaskFromLocalStorage","addTaskToLocalStorage","obj","tasks","removeTaskToLocalStorage","id","newTasks","value","refs","renderTask","item","taskName","taskText","handleFormSubmit","evt","newTask","nanoid","handleTaskList"],"mappings":"svBAAA,MAAMA,EAAc,CAClB,CACE,GAAI,IACJ,SAAU,OACV,SAAU,aACX,EACD,CACE,GAAI,IACJ,SAAU,SACV,SAAU,cACX,EACD,CACE,GAAI,IACJ,SAAU,SACV,SAAU,gBACX,EACD,CACE,GAAI,IACJ,SAAU,SACV,SAAU,aACX,CACH,EACMC,EAAW,QAEV,SAASC,GAAc,CACdC,IAEH,QACT,aAAa,QAAQF,EAAU,KAAK,UAAUD,CAAW,CAAC,CAG9D,CAEO,SAASI,EAAsBC,EAAK,CACzC,MAAMC,EAAQH,IAEdG,EAAM,KAAKD,CAAG,EAEd,aAAa,QAAQJ,EAAU,KAAK,UAAUK,CAAK,CAAC,CACtD,CAEO,SAASH,GAA0B,CACxC,OAAO,KAAK,MAAM,aAAa,QAAQF,CAAQ,CAAC,CAClD,CAEO,SAASM,EAAyBC,EAAI,CAG3C,MAAMC,EAFQN,IAES,OAAOO,GAASA,EAAM,KAAOF,CAAE,EAEtD,aAAa,QAAQP,EAAU,KAAK,UAAUQ,CAAQ,CAAC,CACzD,CCnDA,MAAeE,EAAA,CACb,KAAM,SAAS,cAAc,YAAY,EACzC,UAAW,SAAS,cAAc,YAAY,CAChD,ECAO,SAASC,GAAa,CAE3B,MAAMC,EADQV,IAEX,IACC,CAAC,CAAE,GAAAK,EAAI,SAAAM,EAAU,SAAAC,CAAU,IACzB;AAAA,oDAC4CP,CAAE;AAAA,YAC1CM,CAAQ;AAAA,WACTC,CAAQ;AAAA,UAEd,EACA,KAAK,EAAE,EAEVJ,EAAK,UAAU,UAAYE,CAC7B,CCVO,SAASG,EAAiBC,EAAK,CACpCA,EAAI,eAAc,EAClB,MAAMH,EAAWG,EAAI,cAAc,SAAS,SAAS,MAAM,OACrDF,EAAWE,EAAI,cAAc,SAAS,SAAS,MAAM,OAC3D,GAAI,CAACH,GAAY,CAACC,EAAU,CAC1B,MAAM,0BAA0B,EAChC,MACD,CACD,MAAMG,EAAU,CAAE,GAAIC,EAAM,EAAI,SAAAL,EAAU,SAAAC,GAC1CX,EAAsBc,CAAO,EAC7BD,EAAI,cAAc,QAClBL,GACF,CAEO,SAASQ,EAAeH,EAAK,CAElC,GADAA,EAAI,eAAc,EACd,CAACA,EAAI,OAAO,UAAU,SAAS,oBAAoB,EACrD,OAEF,MAAMT,EAAKS,EAAI,OAAO,QAAQ,GAC9BV,EAAyBC,CAAE,EAC3BI,GACF,CCJAV,IACAU,IAGAD,EAAK,KAAK,iBAAiB,SAAUK,CAAgB,EACrDL,EAAK,UAAU,iBAAiB,QAASS,CAAc"}